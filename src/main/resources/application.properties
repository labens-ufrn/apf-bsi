# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url = jdbc:mysql://localhost:3306/apf_db
spring.datasource.username = apf_user
spring.datasource.password = 12345
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.datasource.driverclassname = com.mysql.jdbc.Driver

# ===============================
# = JPA / HIBERNATE
# ===============================
#spring.jpa.show-sql = true
#spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------

# Context path of the application.
server.servlet.context-path=/apf
# Display name of the application.
server.display-name=Analisador de Pontos de Função
# Define server port.
server.port=8080

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role_name from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?

# =============================================================
# = Spring General
# =============================================================
spring.main.allow-bean-definition-overriding=true
